<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Keeper</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="container"> 
        <h1>Password Keeper</h1>
        
        <!-- Password form --> 
        <form id="passwordForm">
            <input type="text" id="title" placeholder="Title" required>
            <input type="password" id="password" placeholder="Password" required>
            <button type="submit">Add Password</button>
        </form>
        
        <hr>
         
        <!-- Password list -->
        <div id="passwordList"></div>

        <!-- Password count -->
        <p id="passwordCount">Total Passwords: 0</p>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="script.js"></script>
</body>
</html>


<-----------------------------------------------------------------------------------------JavaScript------------------------------------------------------------------------------------------------------------->

// Global password list
let passwordList = [];

// Fetch data from the API and update the UI
function fetchPasswords() {
    axios.get('https://crudcrud.com/api/0afab6ecf45341919db4cb33fe2a4fde/passwords')
        .then(response => {
            passwordList = response.data;
            renderPasswords();
        })
        .catch(error => {
            console.error("There was an error fetching the passwords!", error);
        });
}

// Render passwords in the list
function renderPasswords() {
    const passwordListDiv = document.getElementById('passwordList');
    passwordListDiv.innerHTML = '';

    passwordList.forEach((password, index) => {
        const passwordItem = document.createElement('div');
        passwordItem.classList.add('password-item');
        
        const passwordTitle = document.createElement('span');
        passwordTitle.textContent = password.title;
        
        const passwordActions = document.createElement('div');
        
        // Edit Button
        const editButton = document.createElement('button');
        editButton.textContent = 'Edit';
        editButton.classList.add('edit');
        editButton.onclick = () => editPassword(index);
        
        // Delete Button
        const deleteButton = document.createElement('button');
        deleteButton.textContent = 'Delete';
        deleteButton.classList.add('delete');
        deleteButton.onclick = () => deletePassword(password._id); // Use the unique _id provided by CRUD CRUD
        
        passwordActions.appendChild(editButton);
        passwordActions.appendChild(deleteButton);
        
        passwordItem.appendChild(passwordTitle);
        passwordItem.appendChild(passwordActions);
        passwordListDiv.appendChild(passwordItem);
    });

    // Update password count
    document.getElementById('passwordCount').textContent = `Total Passwords: ${passwordList.length}`;
}

// Add a new password
function addPassword(title, password) {
    axios.post('https://crudcrud.com/api/0afab6ecf45341919db4cb33fe2a4fde/passwords', { title, password })
        .then(response => {
            passwordList.push(response.data);
            renderPasswords();
        })
        .catch(error => {
            console.error("There was an error adding the password!", error);
        });
}

// Delete password
function deletePassword(id) {
    console.log("Deleting password with id:", id);  // Debugging line
    
    axios.delete(`https://crudcrud.com/api/0afab6ecf45341919db4cb33fe2a4fde/passwords/${id}`)
        .then(response => {
            console.log("Password deleted successfully:", response.data);  // Debugging line
            // Remove the password from the list using the id
            passwordList = passwordList.filter(password => password._id !== id);
            renderPasswords();
        })
        .catch(error => {
            console.error("There was an error deleting the password!", error);
        });
}

// Edit password 
function editPassword(index) {
    const newTitle = prompt("Enter new title:", passwordList[index].title);
    const newPassword = prompt("Enter new password:", passwordList[index].password);
    
    if (newTitle && newPassword) {
        const passwordId = passwordList[index]._id;
        axios.put(`https://crudcrud.com/api/0afab6ecf45341919db4cb33fe2a4fde/passwords/${passwordId}`, { title: newTitle, password: newPassword })
            .then(response => {
                passwordList[index] = response.data;
                renderPasswords();
            })
            .catch(error => {
                console.error("There was an error updating the password!", error);
            });
    }
}

// Handle form submission
document.getElementById('passwordForm').addEventListener('submit', (e) => {
    e.preventDefault();
    
    const title = document.getElementById('title').value;
    const password = document.getElementById('password').value;
    
    if (title && password) {
        addPassword(title, password);
        document.getElementById('title').value = '';
        document.getElementById('password').value = '';
    }
});

// Load initial passwords
fetchPasswords();
